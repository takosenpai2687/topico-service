package usyd.elec5619.topicoservice.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class CommentExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_comment
     *
     * @mbg.generated Mon Sep 11 03:54:13 AEST 2023
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_comment
     *
     * @mbg.generated Mon Sep 11 03:54:13 AEST 2023
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_comment
     *
     * @mbg.generated Mon Sep 11 03:54:13 AEST 2023
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_comment
     *
     * @mbg.generated Mon Sep 11 03:54:13 AEST 2023
     */
    public CommentExample() {
        oredCriteria = new ArrayList<>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_comment
     *
     * @mbg.generated Mon Sep 11 03:54:13 AEST 2023
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_comment
     *
     * @mbg.generated Mon Sep 11 03:54:13 AEST 2023
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_comment
     *
     * @mbg.generated Mon Sep 11 03:54:13 AEST 2023
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_comment
     *
     * @mbg.generated Mon Sep 11 03:54:13 AEST 2023
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_comment
     *
     * @mbg.generated Mon Sep 11 03:54:13 AEST 2023
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_comment
     *
     * @mbg.generated Mon Sep 11 03:54:13 AEST 2023
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_comment
     *
     * @mbg.generated Mon Sep 11 03:54:13 AEST 2023
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_comment
     *
     * @mbg.generated Mon Sep 11 03:54:13 AEST 2023
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_comment
     *
     * @mbg.generated Mon Sep 11 03:54:13 AEST 2023
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_comment
     *
     * @mbg.generated Mon Sep 11 03:54:13 AEST 2023
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_comment
     *
     * @mbg.generated Mon Sep 11 03:54:13 AEST 2023
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andPostIdIsNull() {
            addCriterion("post_id is null");
            return (Criteria) this;
        }

        public Criteria andPostIdIsNotNull() {
            addCriterion("post_id is not null");
            return (Criteria) this;
        }

        public Criteria andPostIdEqualTo(Integer value) {
            addCriterion("post_id =", value, "postId");
            return (Criteria) this;
        }

        public Criteria andPostIdNotEqualTo(Integer value) {
            addCriterion("post_id <>", value, "postId");
            return (Criteria) this;
        }

        public Criteria andPostIdGreaterThan(Integer value) {
            addCriterion("post_id >", value, "postId");
            return (Criteria) this;
        }

        public Criteria andPostIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("post_id >=", value, "postId");
            return (Criteria) this;
        }

        public Criteria andPostIdLessThan(Integer value) {
            addCriterion("post_id <", value, "postId");
            return (Criteria) this;
        }

        public Criteria andPostIdLessThanOrEqualTo(Integer value) {
            addCriterion("post_id <=", value, "postId");
            return (Criteria) this;
        }

        public Criteria andPostIdIn(List<Integer> values) {
            addCriterion("post_id in", values, "postId");
            return (Criteria) this;
        }

        public Criteria andPostIdNotIn(List<Integer> values) {
            addCriterion("post_id not in", values, "postId");
            return (Criteria) this;
        }

        public Criteria andPostIdBetween(Integer value1, Integer value2) {
            addCriterion("post_id between", value1, value2, "postId");
            return (Criteria) this;
        }

        public Criteria andPostIdNotBetween(Integer value1, Integer value2) {
            addCriterion("post_id not between", value1, value2, "postId");
            return (Criteria) this;
        }

        public Criteria andAuthorIdIsNull() {
            addCriterion("author_id is null");
            return (Criteria) this;
        }

        public Criteria andAuthorIdIsNotNull() {
            addCriterion("author_id is not null");
            return (Criteria) this;
        }

        public Criteria andAuthorIdEqualTo(Integer value) {
            addCriterion("author_id =", value, "authorId");
            return (Criteria) this;
        }

        public Criteria andAuthorIdNotEqualTo(Integer value) {
            addCriterion("author_id <>", value, "authorId");
            return (Criteria) this;
        }

        public Criteria andAuthorIdGreaterThan(Integer value) {
            addCriterion("author_id >", value, "authorId");
            return (Criteria) this;
        }

        public Criteria andAuthorIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("author_id >=", value, "authorId");
            return (Criteria) this;
        }

        public Criteria andAuthorIdLessThan(Integer value) {
            addCriterion("author_id <", value, "authorId");
            return (Criteria) this;
        }

        public Criteria andAuthorIdLessThanOrEqualTo(Integer value) {
            addCriterion("author_id <=", value, "authorId");
            return (Criteria) this;
        }

        public Criteria andAuthorIdIn(List<Integer> values) {
            addCriterion("author_id in", values, "authorId");
            return (Criteria) this;
        }

        public Criteria andAuthorIdNotIn(List<Integer> values) {
            addCriterion("author_id not in", values, "authorId");
            return (Criteria) this;
        }

        public Criteria andAuthorIdBetween(Integer value1, Integer value2) {
            addCriterion("author_id between", value1, value2, "authorId");
            return (Criteria) this;
        }

        public Criteria andAuthorIdNotBetween(Integer value1, Integer value2) {
            addCriterion("author_id not between", value1, value2, "authorId");
            return (Criteria) this;
        }

        public Criteria andReplyToCommentIdIsNull() {
            addCriterion("reply_to_comment_id is null");
            return (Criteria) this;
        }

        public Criteria andReplyToCommentIdIsNotNull() {
            addCriterion("reply_to_comment_id is not null");
            return (Criteria) this;
        }

        public Criteria andReplyToCommentIdEqualTo(Integer value) {
            addCriterion("reply_to_comment_id =", value, "replyToCommentId");
            return (Criteria) this;
        }

        public Criteria andReplyToCommentIdNotEqualTo(Integer value) {
            addCriterion("reply_to_comment_id <>", value, "replyToCommentId");
            return (Criteria) this;
        }

        public Criteria andReplyToCommentIdGreaterThan(Integer value) {
            addCriterion("reply_to_comment_id >", value, "replyToCommentId");
            return (Criteria) this;
        }

        public Criteria andReplyToCommentIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("reply_to_comment_id >=", value, "replyToCommentId");
            return (Criteria) this;
        }

        public Criteria andReplyToCommentIdLessThan(Integer value) {
            addCriterion("reply_to_comment_id <", value, "replyToCommentId");
            return (Criteria) this;
        }

        public Criteria andReplyToCommentIdLessThanOrEqualTo(Integer value) {
            addCriterion("reply_to_comment_id <=", value, "replyToCommentId");
            return (Criteria) this;
        }

        public Criteria andReplyToCommentIdIn(List<Integer> values) {
            addCriterion("reply_to_comment_id in", values, "replyToCommentId");
            return (Criteria) this;
        }

        public Criteria andReplyToCommentIdNotIn(List<Integer> values) {
            addCriterion("reply_to_comment_id not in", values, "replyToCommentId");
            return (Criteria) this;
        }

        public Criteria andReplyToCommentIdBetween(Integer value1, Integer value2) {
            addCriterion("reply_to_comment_id between", value1, value2, "replyToCommentId");
            return (Criteria) this;
        }

        public Criteria andReplyToCommentIdNotBetween(Integer value1, Integer value2) {
            addCriterion("reply_to_comment_id not between", value1, value2, "replyToCommentId");
            return (Criteria) this;
        }

        public Criteria andReplyToUserIdIsNull() {
            addCriterion("reply_to_user_id is null");
            return (Criteria) this;
        }

        public Criteria andReplyToUserIdIsNotNull() {
            addCriterion("reply_to_user_id is not null");
            return (Criteria) this;
        }

        public Criteria andReplyToUserIdEqualTo(Integer value) {
            addCriterion("reply_to_user_id =", value, "replyToUserId");
            return (Criteria) this;
        }

        public Criteria andReplyToUserIdNotEqualTo(Integer value) {
            addCriterion("reply_to_user_id <>", value, "replyToUserId");
            return (Criteria) this;
        }

        public Criteria andReplyToUserIdGreaterThan(Integer value) {
            addCriterion("reply_to_user_id >", value, "replyToUserId");
            return (Criteria) this;
        }

        public Criteria andReplyToUserIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("reply_to_user_id >=", value, "replyToUserId");
            return (Criteria) this;
        }

        public Criteria andReplyToUserIdLessThan(Integer value) {
            addCriterion("reply_to_user_id <", value, "replyToUserId");
            return (Criteria) this;
        }

        public Criteria andReplyToUserIdLessThanOrEqualTo(Integer value) {
            addCriterion("reply_to_user_id <=", value, "replyToUserId");
            return (Criteria) this;
        }

        public Criteria andReplyToUserIdIn(List<Integer> values) {
            addCriterion("reply_to_user_id in", values, "replyToUserId");
            return (Criteria) this;
        }

        public Criteria andReplyToUserIdNotIn(List<Integer> values) {
            addCriterion("reply_to_user_id not in", values, "replyToUserId");
            return (Criteria) this;
        }

        public Criteria andReplyToUserIdBetween(Integer value1, Integer value2) {
            addCriterion("reply_to_user_id between", value1, value2, "replyToUserId");
            return (Criteria) this;
        }

        public Criteria andReplyToUserIdNotBetween(Integer value1, Integer value2) {
            addCriterion("reply_to_user_id not between", value1, value2, "replyToUserId");
            return (Criteria) this;
        }

        public Criteria andReplyToNameIsNull() {
            addCriterion("reply_to_name is null");
            return (Criteria) this;
        }

        public Criteria andReplyToNameIsNotNull() {
            addCriterion("reply_to_name is not null");
            return (Criteria) this;
        }

        public Criteria andReplyToNameEqualTo(String value) {
            addCriterion("reply_to_name =", value, "replyToName");
            return (Criteria) this;
        }

        public Criteria andReplyToNameNotEqualTo(String value) {
            addCriterion("reply_to_name <>", value, "replyToName");
            return (Criteria) this;
        }

        public Criteria andReplyToNameGreaterThan(String value) {
            addCriterion("reply_to_name >", value, "replyToName");
            return (Criteria) this;
        }

        public Criteria andReplyToNameGreaterThanOrEqualTo(String value) {
            addCriterion("reply_to_name >=", value, "replyToName");
            return (Criteria) this;
        }

        public Criteria andReplyToNameLessThan(String value) {
            addCriterion("reply_to_name <", value, "replyToName");
            return (Criteria) this;
        }

        public Criteria andReplyToNameLessThanOrEqualTo(String value) {
            addCriterion("reply_to_name <=", value, "replyToName");
            return (Criteria) this;
        }

        public Criteria andReplyToNameLike(String value) {
            addCriterion("reply_to_name like", value, "replyToName");
            return (Criteria) this;
        }

        public Criteria andReplyToNameNotLike(String value) {
            addCriterion("reply_to_name not like", value, "replyToName");
            return (Criteria) this;
        }

        public Criteria andReplyToNameIn(List<String> values) {
            addCriterion("reply_to_name in", values, "replyToName");
            return (Criteria) this;
        }

        public Criteria andReplyToNameNotIn(List<String> values) {
            addCriterion("reply_to_name not in", values, "replyToName");
            return (Criteria) this;
        }

        public Criteria andReplyToNameBetween(String value1, String value2) {
            addCriterion("reply_to_name between", value1, value2, "replyToName");
            return (Criteria) this;
        }

        public Criteria andReplyToNameNotBetween(String value1, String value2) {
            addCriterion("reply_to_name not between", value1, value2, "replyToName");
            return (Criteria) this;
        }

        public Criteria andCtimeIsNull() {
            addCriterion("ctime is null");
            return (Criteria) this;
        }

        public Criteria andCtimeIsNotNull() {
            addCriterion("ctime is not null");
            return (Criteria) this;
        }

        public Criteria andCtimeEqualTo(Date value) {
            addCriterion("ctime =", value, "ctime");
            return (Criteria) this;
        }

        public Criteria andCtimeNotEqualTo(Date value) {
            addCriterion("ctime <>", value, "ctime");
            return (Criteria) this;
        }

        public Criteria andCtimeGreaterThan(Date value) {
            addCriterion("ctime >", value, "ctime");
            return (Criteria) this;
        }

        public Criteria andCtimeGreaterThanOrEqualTo(Date value) {
            addCriterion("ctime >=", value, "ctime");
            return (Criteria) this;
        }

        public Criteria andCtimeLessThan(Date value) {
            addCriterion("ctime <", value, "ctime");
            return (Criteria) this;
        }

        public Criteria andCtimeLessThanOrEqualTo(Date value) {
            addCriterion("ctime <=", value, "ctime");
            return (Criteria) this;
        }

        public Criteria andCtimeIn(List<Date> values) {
            addCriterion("ctime in", values, "ctime");
            return (Criteria) this;
        }

        public Criteria andCtimeNotIn(List<Date> values) {
            addCriterion("ctime not in", values, "ctime");
            return (Criteria) this;
        }

        public Criteria andCtimeBetween(Date value1, Date value2) {
            addCriterion("ctime between", value1, value2, "ctime");
            return (Criteria) this;
        }

        public Criteria andCtimeNotBetween(Date value1, Date value2) {
            addCriterion("ctime not between", value1, value2, "ctime");
            return (Criteria) this;
        }

        public Criteria andUtimeIsNull() {
            addCriterion("utime is null");
            return (Criteria) this;
        }

        public Criteria andUtimeIsNotNull() {
            addCriterion("utime is not null");
            return (Criteria) this;
        }

        public Criteria andUtimeEqualTo(Date value) {
            addCriterion("utime =", value, "utime");
            return (Criteria) this;
        }

        public Criteria andUtimeNotEqualTo(Date value) {
            addCriterion("utime <>", value, "utime");
            return (Criteria) this;
        }

        public Criteria andUtimeGreaterThan(Date value) {
            addCriterion("utime >", value, "utime");
            return (Criteria) this;
        }

        public Criteria andUtimeGreaterThanOrEqualTo(Date value) {
            addCriterion("utime >=", value, "utime");
            return (Criteria) this;
        }

        public Criteria andUtimeLessThan(Date value) {
            addCriterion("utime <", value, "utime");
            return (Criteria) this;
        }

        public Criteria andUtimeLessThanOrEqualTo(Date value) {
            addCriterion("utime <=", value, "utime");
            return (Criteria) this;
        }

        public Criteria andUtimeIn(List<Date> values) {
            addCriterion("utime in", values, "utime");
            return (Criteria) this;
        }

        public Criteria andUtimeNotIn(List<Date> values) {
            addCriterion("utime not in", values, "utime");
            return (Criteria) this;
        }

        public Criteria andUtimeBetween(Date value1, Date value2) {
            addCriterion("utime between", value1, value2, "utime");
            return (Criteria) this;
        }

        public Criteria andUtimeNotBetween(Date value1, Date value2) {
            addCriterion("utime not between", value1, value2, "utime");
            return (Criteria) this;
        }

        public Criteria andDeletedIsNull() {
            addCriterion("deleted is null");
            return (Criteria) this;
        }

        public Criteria andDeletedIsNotNull() {
            addCriterion("deleted is not null");
            return (Criteria) this;
        }

        public Criteria andDeletedEqualTo(Byte value) {
            addCriterion("deleted =", value, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedNotEqualTo(Byte value) {
            addCriterion("deleted <>", value, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedGreaterThan(Byte value) {
            addCriterion("deleted >", value, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedGreaterThanOrEqualTo(Byte value) {
            addCriterion("deleted >=", value, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedLessThan(Byte value) {
            addCriterion("deleted <", value, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedLessThanOrEqualTo(Byte value) {
            addCriterion("deleted <=", value, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedIn(List<Byte> values) {
            addCriterion("deleted in", values, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedNotIn(List<Byte> values) {
            addCriterion("deleted not in", values, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedBetween(Byte value1, Byte value2) {
            addCriterion("deleted between", value1, value2, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedNotBetween(Byte value1, Byte value2) {
            addCriterion("deleted not between", value1, value2, "deleted");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_comment
     *
     * @mbg.generated do_not_delete_during_merge Mon Sep 11 03:54:13 AEST 2023
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_comment
     *
     * @mbg.generated Mon Sep 11 03:54:13 AEST 2023
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}